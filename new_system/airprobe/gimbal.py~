#!/usr/bin/env python2

import datetime
from multiprocessing import Process, Queue
from Queue import Empty
import time

import numpy as np
from gimbal_controller import gimbal_controller

SKIP_CYCLES=10 #only send the position every 10 cycles

class gimbal (Process):
    def __init__(self, in_q, out_q):
        Process.__init__(self)
        self.goal_q = in_q
        self.position_q = out_q

        self.dt_des =1/200.0
        self.r_controller = gimbal_controller(self.dt_des)
        self.c=0
        self.error=0
        self.r_controller.goal=0
        self.cycles = 0

    def run(self):
        self.r_controller.active = True
        while True:
            #check if any new goal has been set
            try:
                self.r_controller.goal = self.goal_q.get(False)
            except Empty:
                pass

            t_0 = datetime.datetime.now()
            self.c+=1
            #run the roll controller
            if(self.cycles >= SKIP_CYCLES):
                self.position_q.put(self.r_controller.run_gimbal())
                self.cycles = 0
            else:
                self.r_controller.run_gimbal()
                self.cycles = self.cycles + 1
            t_1 = datetime.datetime.now()
            dt = (t_1-t_0).total_seconds()
            sleep_time = self.dt_des-dt
            if sleep_time<0:
                sleep_time = 0
                #print('GIMBAL LOOP TOOK TOO LONG %.4f' % dt)
            time.sleep(sleep_time)


