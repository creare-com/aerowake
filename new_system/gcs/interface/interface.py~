#!/usr/bin/env python2

import datetime
from multiprocessing import Process, Queue
from Queue import Empty
import time

import numpy as np

from Tkinter import *


class interface_run (Process):
    def __init__(self, cmd, data_out):
        Process.__init__(self)
        self.cmd = cmd
        self.data_out = data_out
        self.dt_des =1/200.0
        self.cycles = 0


    def callback(self):
        print "You pushed a button"


    def run(self):

        root = Tk()
        frame = Frame(master)
        frame.pack()

	b1 = Button(frame,text="takeoff")
	b1.pack(fill=BOTH, expand = 1)

    	button = Button(frame, 
                         text="QUIT", fg="red",
                         command=frame.quit)
    	button.pack(side=LEFT)
    	slogan = Button(frame,
                         text="Hello")
    	slogan.pack(side=LEFT)

    

        root.mainloop()

        # while True:
        #     #check if any new cmds
        #     try:
        #         self.cmd.get(False)
        #     except Empty:
        #         pass

        #     t_0 = datetime.datetime.now()

        #     #run the airprobe and push the data to the queue if its been so many skip cycles. 
        #     if(self.cycles >= SKIP_CYCLES):
        #         self.data_out.put(self.airprobe.run())
        #         self.cycles = 0
        #     else:
        #         self.airprobe.run()
        #         self.cycles = self.cycles + 1

        #     #Sleep for desired amount of time
        #     t_1 = datetime.datetime.now()
        #     dt = (t_1-t_0).total_seconds()
        #     sleep_time = self.dt_des-dt
        #     if sleep_time<0:
        #         sleep_time = 0
        #     time.sleep(sleep_time)






## PUT THIS IN A WORKER THREAD

from Tkinter import *

root = Tk()

def callback(event):
    print "clicked at", event.x, event.y

frame = Frame(root, width=100, height=100)
frame.bind("<Button-1>", callback)
frame.pack()

root.mainloop()

